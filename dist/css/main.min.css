*,:after,:before{box-sizing:border-box;padding:0;margin:0}ol,ul{list-style:none}html:focus-within{scroll-behavior:smooth}html{font-size:62.5%}body{min-height:100vh;font-size:1.6rem;text-rendering:optimizeSpeed;line-height:1.5}a:not([class]){-webkit-text-decoration-skip:ink;text-decoration-skip-ink:auto}img,picture{max-width:100%;display:block}button,input,select,textarea{font:inherit}@media (prefers-reduced-motion:reduce){html:focus-within{scroll-behavior:auto}*,:after,:before{animation-duration:.01ms!important;animation-iteration-count:1!important;transition-duration:.01ms!important;scroll-behavior:auto!important}}:root{--clr-primary-400:#202a3c;--clr-primary-500:#1c2431;--clr-primary-600:#181f2a;--clr-primary-700:#0b1523;--clr-accent-200:#ff4242;--clr-accent-300:#8cdae3;--clr-accent-400:#65e2d9;--clr-accent-700:#339ecc;--clr-neutral-100:#fff;--ff-primary:"Open Sans",sans-serif;--ff-secondary:"Raleway",sans-serif;--fw-400:400;--fw-700:700;--fz-100:0.8rem;--fz-200:1rem;--fz-225:1.2rem;--fz-250:1.2rem;--fz-300:1.2rem;--fz-400:1.4rem;--fz-450:1.4rem;--fz-475:1.4rem;--fz-700:2.4rem;--fz-card-heading:1.8rem;--fz-sign-up-heading:1.8rem;--fz-productive-heading:1.8rem;--borr-100:0.4rem;--borr-200:0.9rem;--borr-900:100vmax}@media only screen and (min-width:50em){:root{--fz-250:1.4rem;--fz-300:1.6rem;--fz-450:1.6rem;--fz-475:2rem;--fz-700:4rem;--fz-card-heading:2rem;--fz-sign-up-heading:3.2rem;--fz-productive-heading:4rem}}body{font-family:var(--ff-primary);font-weight:var(--fw-400);font-size:var(--fz-400);background-color:var(--clr-primary-500)}body,h1,h2,h3{color:var(--clr-neutral-100)}h1,h2,h3{font-family:var(--ff-secondary);font-weight:var(--fw-700)}.flow>*+*{margin-top:var(--flow-spacer,1em)}.container{--padding-inline:2.8rem;margin-inline:auto;width:min(var(--max-width,111rem),100% - 2 * var(--padding-inline))}.container--xsmall{--max-width:72rem}.container--small{--max-width:88rem}.container--medium{--max-width:116rem}.container--large{--max-width:124rem}.container--xlarge{--max-width:128rem}.features-grid{display:grid;justify-content:center;gap:8rem}@media only screen and (min-width:38em){.features-grid{grid-template-columns:repeat(2,1fr)}.features-grid>:nth-child(2n){justify-self:end}.features-grid>:nth-child(odd){justify-self:start}}.testimonials-grid{display:grid;gap:2.4rem}@media only screen and (min-width:50em){.testimonials-grid{grid-template-columns:repeat(3,1fr);gap:4rem}}.primary-header{margin-bottom:clamp(12rem,20vw,15.8rem)}.primary-header__heading{font-size:var(--fz-700)}.primary-header__button{margin-top:1.8rem}@media only screen and (min-width:50em){.primary-header__button{margin-top:3.2rem}}.primary-navigation{display:flex;align-items:center;justify-content:space-between;padding-top:clamp(2.4rem,5vw,7.4rem);margin-bottom:clamp(4.8rem,7.5vw,7.4rem)}.primary-navigation__nav-list{display:flex;align-items:center;gap:clamp(2.4rem,-1rem + 5vw,5.8rem)}.primary-navigation__nav-link{font-family:var(--ff-secondary);font-size:var(--fz-300)}.primary-navigation__nav-link:focus-visible,.primary-navigation__nav-link:hover{text-decoration:underline;font-weight:var(--fw-700)}.logo{--width:clamp(8rem,20vw,17.6rem);max-width:var(--width)}.logo--small{--width:10.8rem}.link{color:var(--clr-neutral-100);text-decoration:none;cursor:pointer;transition:color .35s ease}.link--accent{--accent-link:var(--clr-accent-400);position:relative;display:inline-flex;align-items:center;color:var(--accent-link);gap:.8rem}.link--accent:after{content:"";position:absolute;bottom:-.6rem;left:0;width:100%;height:1px;background-color:var(--accent-link);transition:background-color .35s ease}.link--accent:focus-visible,.link--accent:hover{--accent-link:var(--clr-neutral-100)}.button{display:inline-block;padding:var(--button-padding-block,1.225em) var(--button-padding-inline,6em);font-family:var(--ff-secondary);font-size:var(--fz-450);font-weight:var(--fw-700);text-decoration:none;line-height:1;color:var(--clr-neutral-100);background:linear-gradient(135deg,var(--clr-accent-400),var(--clr-accent-700));border:none;border-radius:var(--borr-900);cursor:pointer}.button:focus-visible,.button:hover{background:var(--clr-accent-300)}.button--small{--button-padding-block:1em;--button-padding-inline:1.85em}.feature-card{display:flex;flex-direction:column;align-items:center;max-width:36rem;text-align:center;font-size:var(--fz-400)}.feature-card__heading{margin-top:2.4rem;margin-bottom:.4rem;font-size:var(--fz-card-heading)}@media only screen and (min-width:38em){.feature-card__heading{margin-top:1.6rem}}.feature-card__icon{--width:8rem;width:var(--width);aspect-ratio:1;-o-object-fit:contain;object-fit:contain}@media only screen and (min-width:38em){.feature-card__icon{--width:10.4rem}}.productive{display:flex;flex-direction:column;align-items:center;gap:clamp(4.8rem,5vw,5.8rem)}@media only screen and (min-width:50em){.productive{flex-direction:row}}@media only screen and (min-width:50em){.productive header{padding-right:clamp(2rem,-2.5rem + 7.5vw,8rem)}}.productive__heading{font-size:var(--fz-productive-heading)}@media only screen and (min-width:50em){.productive__image{max-width:50%}}.testimonial{--padding:2rem;--padding-top:2.4rem;background-color:var(--clr-primary-400);border-radius:var(--borr-100);padding:var(--padding);padding-top:var(--padding-top);max-width:40rem;margin-inline:auto}@media only screen and (min-width:50em){.testimonial{--padding:2.6rem;--padding-top:4rem}}.testimonial__quote{font-size:var(--fz-250)}.testimonial__footer{display:flex;align-items:center;gap:.8rem;margin-top:1.6rem}@media only screen and (min-width:50em){.testimonial__footer{margin-top:2.4rem}}.testimonial__avatar{--size:2.4rem;width:2.4rem;aspect-ratio:1;-o-object-fit:cover;object-fit:cover;border-radius:50%}.testimonial__author{font-size:var(--fz-200);font-weight:var(--fw-700)}.testimonial__position{font-size:var(--fz-100)}.testimonial--quotes{position:relative}.testimonial--quotes:before{content:url(../../../dist/images/backgrounds/bg-quotes.png);position:absolute;top:-3rem;left:-1rem;z-index:-10}.early-access{display:grid;gap:3.2rem;padding-block:4rem;padding-inline:clamp(2.8rem,-2rem + 7.5vw,7.7rem);background-color:var(--clr-neutral-500);border-radius:var(--borr-200);box-shadow:.5rem .5rem .8rem rgba(0,0,0,.25)}@media only screen and (min-width:50em){.early-access header{padding-inline:4rem}}.early-access__heading{font-size:var(--fz-sign-up-heading)}.sign-up-form{display:flex;flex-direction:column;gap:2.4rem}@media only screen and (min-width:38em){.sign-up-form{flex-direction:row;gap:2.8rem}}.sign-up-form__input{flex:1;padding:1.25em 3em;font-size:var(--fz-225);color:var(--clr-primary-700);border:none;border-radius:var(--borr-900)}.visually-hidden{clip:rect(0 0 0 0);-webkit-clip-path:inset(50%);clip-path:inset(50%);position:absolute;width:1px;height:1px;overflow:hidden;white-space:nowrap}.text-center{text-align:center}.fz-475{font-size:var(--fz-475)}.section-margin-bottom{margin-bottom:clamp(12rem,20rem - 7.5vw,16rem)}.testimonials-margin-bottom{margin-bottom:clamp(16rem,25vw,20rem)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
